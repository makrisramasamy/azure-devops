trigger:
  branches:
    include:
    - main
variables:
- name: azureServiceConnectionId
  value: a92ba771-b6a9-4185-95bd-2995da175601
- name: webAppName
  value: testappflask
- name: vmImageName
  value: ubuntu-latest
- name: environmentName
  value: dev
- name: projectRoot
  value: $(System.DefaultWorkingDirectory)
- name: pythonVersion
  value: 3.7
stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(pythonVersion)
      displayName: Use Python $(pythonVersion)
    - task: CmdLine@2
      displayName: Install requirements
      inputs:
        script: >
          python -m venv antenv

          source antenv/bin/activate

          python -m pip install --upgrade pip

          pip install setup

          pip install -r requirements.txt
        workingDirectory: $(projectRoot)
    - task: ArchiveFiles@2
      displayName: Archive files
      inputs:
        rootFolderOrFile: $(projectRoot)
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    - task: ecdc45f6-832d-4ad9-b52b-ee49e94659be@0
      displayName: Upload package
      inputs:
        targetPath: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        artifactName: drop
- stage: Deploy
  displayName: Deploy Web App
  dependsOn:
  - Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment:
      name: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: $(pythonVersion)
            displayName: Use Python version
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : '
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip

